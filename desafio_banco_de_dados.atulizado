menu = """
    ---------- MENU ----------
    [d] Depositar
    [s] Sacar
    [e] Extrato
    [nc]Nova conta
    [lc]Listar contas
    [nu]Novo usuário
    [q] Sair
    --------------------------
    digite o comando aqui => """

def depositar(saldo, valor, extrato, /):

        if valor > 0:
            saldo += valor
            extrato += f"deposito:R$ {valor:.2f}\n "
            print ("Deposito realizado")
        else:
            print("operaçao falhou! valor invalido")

        return saldo, extrato

def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saques = numero_saques >= limite_saques
    
    if excedeu_saldo:
        print("operação falhou! falta dinheiro") 

    elif excedeu_limite:
        print("operação falhou! quantia elevada")

    elif excedeu_limite: 
        print("peração falhou! limite de saque alcançado")

    elif valor > 0:
        saldo -= valor
        extrato += f"Saque:\t\tR$ {valor:.2f}\n"
        numero_saques += 1
        print("Saque realizado com sucesso!")
    
    else:
        print("Operação falhou! informe um valor valido")

    return saldo, extrato

def exibir_extrato(saldo, /, *, extrato):
    print("----------EXTRATO----------")
    print("Não foram realizadas movimentações. ")
    print(f"\nSaldo:\t\tR$ {saldo:.2f}")
    print("==========================================")

def criar_usuario(usuario):
    cpf = input("informe seu cpf (somente numero): ")
    usuario = filtrar_usuario(cpf, usuario)

    if usuario:
        print("usuário existente! tente com outro CPF!")
        return
    
    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe a data de nascimento (dd-mm-aaaa): ")
    endereco = input("Informe o endereço (logradouro, nro - bairro - cidade/sigla estado): ")

    usuario.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})

    print("Usuário criado com sucesso!")

def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None


def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do usuário: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("Conta criada com sucesso!")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}

    print("Usuário não encontrado, criação de conta encerrado!")

def listar_contas(contas):
    for conta in contas:
        linha = f"""
            Agência:{conta['agencia']}
            C/C:{conta['numero_conta']}
            Titular:{conta['usuario']['nome']}
        """

def main():

    saldo = 0
    limite = 500
    extrato = ""
    numeros_saques = 0
    agencia = "27790"
    LIMITE_SAQUES = 3 
    usuarios = []
    contas = []

    while True:
        opcao = input(menu)

        if opcao == "d":
            valor = float(input("informe o valor do deposito"))

            saldo, extrato = depositar (saldo,valor, extrato)
        
        elif opcao == "s":
            valor = float(input("Informe o valor do saque: "))

            saldo, extrato = sacar(
                saldo=saldo,
                valor=valor,
                extrato=extrato,
                limite=limite,
                numero_saques=numeros_saques,
                limite_saques=LIMITE_SAQUES,
            )

        elif opcao == "e":
            exibir_extrato(saldo, extrato=extrato)

        elif opcao == "nu":
            criar_usuario(usuarios)

        elif opcao == "nc":
            numero_conta = len(contas) + 1
            conta = criar_conta(agencia, numero_conta, usuarios)

            if conta:
                contas.append(conta)

        elif opcao == "lc":
            listar_contas(conta)

        elif opcao == "q":
            break

        else:
            print("erro! escolha uma opercão valida")

main()
